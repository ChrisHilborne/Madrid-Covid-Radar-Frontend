{"ast":null,"code":"var _jsxFileName = \"/home/chris/Development/covidradar/src/frontend/src/Components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport FormUI from './FormUI.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  getSelected,\n  getDataType\n}) => {\n  _s();\n\n  const [options, setOptions] = useState([]);\n  const urlOptions = 'http://covidradarmadrid-env.eba-wbgad2ub.eu-south-1.elasticbeanstalk.com/api/names&geocodes';\n  useEffect(() => {\n    async function getOptions() {\n      await axios.get(urlOptions).then(response => {\n        const allOptions = response.data;\n        setOptions(convertOptions(allOptions));\n      }).catch(error => console.error(`Error: ${error}`));\n    }\n\n    getOptions();\n  }, []);\n\n  const convertOptions = options => {\n    var optionsArray = Object.keys(options).map(name => {\n      return {\n        \"label\": name,\n        \"value\": options[name]\n      };\n    });\n    return optionsArray;\n  };\n\n  const passUpSelected = selected => {\n    getSelected(selected);\n  };\n\n  const passUpDataType = dataType => {\n    console.log(\"Form:\");\n    console.log(dataType);\n    getDataType(dataType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormUI, {\n    passUpSelected: getSelected,\n    options: options,\n    passUpDataType: getDataType\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"Cb37lItZDPBl0Zl/uTamqIOmlew=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/chris/Development/covidradar/src/frontend/src/Components/Form/Form.js"],"names":["axios","React","useState","useEffect","FormUI","Form","getSelected","getDataType","options","setOptions","urlOptions","getOptions","get","then","response","allOptions","data","convertOptions","catch","error","console","optionsArray","Object","keys","map","name","passUpSelected","selected","passUpDataType","dataType","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAIA,MAAMC,IAAI,GAAG,CAAE;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAF,KAAkC;AAAA;;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAGA,QAAMQ,UAAU,GAAG,6FAAnB;AAEAP,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeQ,UAAf,GAA4B;AACxB,YAAMX,KAAK,CAACY,GAAN,CAAUF,UAAV,EACLG,IADK,CACCC,QAAQ,IAAI;AACf,cAAMC,UAAU,GAAGD,QAAQ,CAACE,IAA5B;AACAP,QAAAA,UAAU,CAACQ,cAAc,CAACF,UAAD,CAAf,CAAV;AACH,OAJK,EAKLG,KALK,CAKCC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAe,UAASA,KAAM,EAA9B,CALV,CAAN;AAMH;;AACDR,IAAAA,UAAU;AACb,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,cAAc,GAAIT,OAAD,IAAa;AAChC,QAAIa,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYf,OAAZ,EAAqBgB,GAArB,CAA0BC,IAAI,IAAI;AACjD,aAAO;AAAE,iBAASA,IAAX;AAAkB,iBAASjB,OAAO,CAACiB,IAAD;AAAlC,OAAP;AACH,KAFkB,CAAnB;AAGA,WAAOJ,YAAP;AACH,GALD;;AAOA,QAAMK,cAAc,GAAIC,QAAD,IAAc;AACjCrB,IAAAA,WAAW,CAACqB,QAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACjCT,IAAAA,OAAO,CAACU,GAAR,CAAY,OAAZ;AACAV,IAAAA,OAAO,CAACU,GAAR,CAAYD,QAAZ;AACAtB,IAAAA,WAAW,CAACsB,QAAD,CAAX;AACH,GAJD;;AAMA,sBACI,QAAC,MAAD;AAAQ,IAAA,cAAc,EAAEvB,WAAxB;AAAqC,IAAA,OAAO,EAAEE,OAA9C;AAAuD,IAAA,cAAc,EAAED;AAAvE;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAvCD;;GAAMF,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport FormUI from './FormUI.js';\n\n\n\nconst Form = ( {getSelected, getDataType} ) => {\n    const [options, setOptions] = useState([]);\n\n\n    const urlOptions = 'http://covidradarmadrid-env.eba-wbgad2ub.eu-south-1.elasticbeanstalk.com/api/names&geocodes';\n\n    useEffect( () => {\n        async function getOptions() {\n            await axios.get(urlOptions)\n            .then( response => {\n                const allOptions = response.data;\n                setOptions(convertOptions(allOptions));\n            })\n            .catch(error => console.error(`Error: ${error}`));\n        }\n        getOptions();\n    }, []);\n\n    const convertOptions = (options) => {\n        var optionsArray = Object.keys(options).map( name => {\n            return { \"label\": name , \"value\": options[name]};\n        });        \n        return optionsArray;\n    }\n\n    const passUpSelected = (selected) => {\n        getSelected(selected);\n    };\n\n    const passUpDataType = (dataType) => {\n        console.log(\"Form:\")\n        console.log(dataType);\n        getDataType(dataType);\n    };\n\n    return(\n        <FormUI passUpSelected={getSelected} options={options} passUpDataType={getDataType} />\n    );\n    \n}\n\nexport default Form\n\n"]},"metadata":{},"sourceType":"module"}