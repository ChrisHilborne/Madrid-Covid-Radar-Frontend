{"ast":null,"code":"var _jsxFileName = \"/home/chris/Development/covidradar/src/frontend/src/Components/Graph/GraphUI.js\";\nimport React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GraphUI = ({\n  healthWard\n}) => {\n  const toString = date => {\n    const year = date[0];\n    const month = date[1].length === 1 ? \"0\" + date[1] : date[1];\n    const day = date[2].length === 1 ? \"0\" + date[2] : date[2];\n    return year + \"-\" + month + \"-\" + day;\n  };\n\n  var dailyRecords = healthWard.dailyRecords;\n  console.log(dailyRecords);\n\n  const labels = () => {\n    const dates = dailyRecords.map(dailyRecord => {\n      return moment(toString(dailyRecord.date));\n    });\n    console.log(dates);\n    return dates;\n  };\n\n  const figures = () => {\n    return dailyRecords.map(dailyRecord => dailyRecord.twoWeekRate);\n  };\n\n  const data = () => {\n    var data = {\n      labels: labels(),\n      datasets: [{\n        label: \"Casos por 10,000\",\n        backgroundColor: \"#444fe3\",\n        data: figures()\n      }]\n    };\n    return data;\n  };\n\n  const options = () => {\n    var options = {\n      maintainAspectRatio: false,\n      responsive: true,\n      scales: {\n        xAxes: [{\n          type: \"time\",\n          time: {\n            unit: 'day',\n            round: 'day',\n            displayFormats: {\n              day: 'MMM D Y'\n            }\n          }\n        }]\n      }\n    };\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        width: 400,\n        height: 400,\n        data: data,\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          scales: {\n            xAxes: [{\n              type: \"time\",\n              time: {\n                unit: 'day',\n                round: 'day',\n                displayFormats: {\n                  day: 'MMM D Y'\n                }\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = GraphUI;\nexport default GraphUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphUI\");","map":{"version":3,"sources":["/home/chris/Development/covidradar/src/frontend/src/Components/Graph/GraphUI.js"],"names":["React","Bar","moment","GraphUI","healthWard","toString","date","year","month","length","day","dailyRecords","console","log","labels","dates","map","dailyRecord","figures","twoWeekRate","data","datasets","label","backgroundColor","options","maintainAspectRatio","responsive","scales","xAxes","type","time","unit","round","displayFormats"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport moment from 'moment';\n\nconst GraphUI = ( { healthWard } ) => {\n\n    const toString = (date) => {\n        const year = date[0];\n        const month = date[1].length === 1 ? \"0\" + date[1] : date[1];\n        const day = date[2].length === 1 ? \"0\" + date[2] : date[2];\n        \n        return year + \"-\" + month + \"-\" + day;\n    };\n\n    var dailyRecords = healthWard.dailyRecords;\n    console.log(dailyRecords);\n\n    const labels = () => { \n            const dates = dailyRecords.map(dailyRecord => { \n                return moment(toString(dailyRecord.date));\n            });\n            console.log(dates);\n            return dates;\n    };\n\n    const figures = () => { \n        return dailyRecords.map(dailyRecord => dailyRecord.twoWeekRate);\n    };\n\n    const data = () => { \n        var data = {\n            labels: labels(),\n            datasets: [{\n                label: \"Casos por 10,000\",\n                backgroundColor: \"#444fe3\",\n                data: figures(),\n                \n            }]\n        };\n        return data;\n    };\n\n    const options = () => {\n        var options = {\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    type: \"time\",\n                    time: {\n                        unit: 'day',\n                        round: 'day',\n                        displayFormats: {\n                            day: 'MMM D Y'\n                        }\n                    },\n                }],\n                }\n            };\n        return options;\n    };\n    \n\n\n\n    return (\n        <>\n            <div>\n                <Line\n                    width={400}\n                    height={400}\n                    data={data}\n                    options={{\n                        maintainAspectRatio: false,\n                        responsive: true,\n                        scales: {\n                            xAxes: [{\n                                type: \"time\",\n                                time: {\n                                    unit: 'day',\n                                    round: 'day',\n                                    displayFormats: {\n                                        day: 'MMM D Y'\n                                    }\n                                }\n                            }],\n                            }\n                        }}\n                />\n            </div>\n        </>\n    );\n    \n}\n\nexport default GraphUI"]},"metadata":{},"sourceType":"module"}