{"ast":null,"code":"var _jsxFileName = \"/home/chris/Development/covidradar/src/frontend/src/Components/Graph/GraphUI.js\";\nimport React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GraphUI = ({\n  healthWard\n}) => {\n  const toString = date => {\n    const day = date[2];\n    const month = date[1];\n    const year = date[0];\n    return year + \"-\" + month + \"-\" + year;\n  };\n\n  var dailyRecords = healthWard.dailyRecords;\n  console.log(dailyRecords);\n\n  var labels = () => {\n    const dateStrings = dailyRecords.map(dailyRecord => toString(dailyRecord.date));\n    const dates = dateStrings.map(dateString => moment(dateString));\n    return dates;\n  };\n\n  var figures = () => {\n    return dailyRecords.map(dailyRecord => dailyRecord.twoWeekRate);\n  };\n\n  const data = () => {\n    var data = {\n      labels: labels,\n      datasets: [{\n        label: \"Casos por 10,000\",\n        hoverBackgroundColor: \"blue\",\n        backgroundColor: \"light-blue\",\n        data: figures,\n        barThickness: \"flex\"\n      }]\n    };\n    return data;\n  };\n\n  const options = () => {\n    var options = {\n      maintainAspectRatio: false,\n      responsive: true,\n      scales: {\n        xAxes: [{\n          type: \"time\",\n          time: {\n            unit: 'day',\n            round: 'day',\n            displayFormats: {\n              day: 'MMM D Y'\n            }\n          }\n        }]\n      }\n    };\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        width: 400,\n        height: 400,\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = GraphUI;\nexport default GraphUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphUI\");","map":{"version":3,"sources":["/home/chris/Development/covidradar/src/frontend/src/Components/Graph/GraphUI.js"],"names":["React","Bar","moment","GraphUI","healthWard","toString","date","day","month","year","dailyRecords","console","log","labels","dateStrings","map","dailyRecord","dates","dateString","figures","twoWeekRate","data","datasets","label","hoverBackgroundColor","backgroundColor","barThickness","options","maintainAspectRatio","responsive","scales","xAxes","type","time","unit","round","displayFormats"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,OAAO,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAsB;AAElC,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAMC,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAhB;AACA,UAAME,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAlB;AACA,UAAMG,IAAI,GAAGH,IAAI,CAAC,CAAD,CAAjB;AACA,WAAOG,IAAI,GAAG,GAAP,GAAaD,KAAb,GAAqB,GAArB,GAA2BC,IAAlC;AACH,GALD;;AAOA,MAAIC,YAAY,GAAGN,UAAU,CAACM,YAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAEA,MAAIG,MAAM,GAAG,MAAM;AACX,UAAMC,WAAW,GAAGJ,YAAY,CAACK,GAAb,CAAiBC,WAAW,IAAIX,QAAQ,CAACW,WAAW,CAACV,IAAb,CAAxC,CAApB;AACA,UAAMW,KAAK,GAAGH,WAAW,CAACC,GAAZ,CAAgBG,UAAU,IAAIhB,MAAM,CAACgB,UAAD,CAApC,CAAd;AACA,WAAOD,KAAP;AACP,GAJD;;AAMA,MAAIE,OAAO,GAAG,MAAM;AAChB,WAAOT,YAAY,CAACK,GAAb,CAAiBC,WAAW,IAAIA,WAAW,CAACI,WAA5C,CAAP;AACH,GAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM;AACf,QAAIA,IAAI,GAAG;AACPR,MAAAA,MAAM,EAAEA,MADD;AAEPS,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,kBADA;AAEPC,QAAAA,oBAAoB,EAAE,MAFf;AAGPC,QAAAA,eAAe,EAAE,YAHV;AAIPJ,QAAAA,IAAI,EAAEF,OAJC;AAKPO,QAAAA,YAAY,EAAE;AALP,OAAD;AAFH,KAAX;AAUA,WAAOL,IAAP;AACH,GAZD;;AAcA,QAAMM,OAAO,GAAG,MAAM;AAClB,QAAIA,OAAO,GAAG;AACVC,MAAAA,mBAAmB,EAAE,KADX;AAEVC,MAAAA,UAAU,EAAE,IAFF;AAGVC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,IAAI,EAAE,MADF;AAEJC,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,KADJ;AAEFC,YAAAA,KAAK,EAAE,KAFL;AAGFC,YAAAA,cAAc,EAAE;AACZ7B,cAAAA,GAAG,EAAE;AADO;AAHd;AAFF,SAAD;AADH;AAHE,KAAd;AAgBA,WAAOoB,OAAP;AACH,GAlBD;;AAuBA,sBACI;AAAA,2BACI;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,IAAI,EAAEN,IAHV;AAII,QAAA,OAAO,EAAEM;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAxED;;KAAMxB,O;AA0EN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport moment from 'moment';\n\nconst GraphUI = ( { healthWard } ) => {\n\n    const toString = (date) => {\n        const day = date[2];\n        const month = date[1];\n        const year = date[0];\n        return year + \"-\" + month + \"-\" + year;\n    };\n\n    var dailyRecords = healthWard.dailyRecords;\n    console.log(dailyRecords);\n\n    var labels = () => { \n            const dateStrings = dailyRecords.map(dailyRecord => toString(dailyRecord.date));\n            const dates = dateStrings.map(dateString => moment(dateString));\n            return dates;\n    };\n\n    var figures = () => { \n        return dailyRecords.map(dailyRecord => dailyRecord.twoWeekRate);\n    };\n\n    const data = () => { \n        var data = {\n            labels: labels,\n            datasets: [{\n                label: \"Casos por 10,000\",\n                hoverBackgroundColor: \"blue\",\n                backgroundColor: \"light-blue\",\n                data: figures,\n                barThickness: \"flex\",\n            }]\n        };\n        return data;\n    };\n\n    const options = () => {\n        var options = {\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    type: \"time\",\n                    time: {\n                        unit: 'day',\n                        round: 'day',\n                        displayFormats: {\n                            day: 'MMM D Y'\n                        }\n                    }\n                }],\n                }\n            }\n        return options;\n    }\n    \n\n\n\n    return (\n        <>\n            <div>\n                <Bar\n                    width={400}\n                    height={400}\n                    data={data}\n                    options={options}\n                />\n            </div>\n        </>\n    );\n    \n}\n\nexport default GraphUI"]},"metadata":{},"sourceType":"module"}