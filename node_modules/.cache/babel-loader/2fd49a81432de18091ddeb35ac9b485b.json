{"ast":null,"code":"var _jsxFileName = \"/home/chris/Development/covidradar/src/frontend/src/Components/Graph/GraphUI.js\";\nimport React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GraphUI = ({\n  healthWard,\n  dataType\n}) => {\n  console.log(\"graphUI\");\n  console.log(dataType);\n\n  const toString = date => {\n    const year = date[0];\n    const month = date[1].par == 2 ? date[1] : \"0\" + date[1];\n    const day = date[2] == 2 ? date[2] : \"0\" + date[2];\n    const dateString = year + \"-\" + month + \"-\" + day;\n    console.log(dateString);\n    return dateString;\n  };\n\n  var dailyRecords = healthWard.dailyRecords;\n  console.log(dailyRecords);\n\n  const labels = () => {\n    const dates = dailyRecords.map(dailyRecord => {\n      return moment(toString(dailyRecord.date));\n    });\n    console.log(dates);\n    return dates;\n  };\n\n  const figures = () => {\n    return dataType.value === \"twoWeekRate\" ? dailyRecords.map(dailyRecord => dailyRecord.twoWeekRate) : dailyRecords.map(dailyRecord => dailyRecord.totalCases);\n  };\n\n  var data = {\n    labels: labels(),\n    datasets: [{\n      label: dataType.label,\n      backgroundColor: \"#444fe3\",\n      data: figures(),\n      barThickness: \"flex\"\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [{\n        type: \"time\",\n        time: {\n          unit: 'day',\n          round: 'day',\n          displayFormats: {\n            day: 'MMM D'\n          }\n        },\n        gridLines: {\n          color: \"rgba(0, 0, 0, 0)\"\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          color: \"rgba(0, 0, 0, 0)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        width: 400,\n        height: 400,\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = GraphUI;\nexport default GraphUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphUI\");","map":{"version":3,"sources":["/home/chris/Development/covidradar/src/frontend/src/Components/Graph/GraphUI.js"],"names":["React","Bar","moment","Container","GraphUI","healthWard","dataType","console","log","toString","date","year","month","par","day","dateString","dailyRecords","labels","dates","map","dailyRecord","figures","value","twoWeekRate","totalCases","data","datasets","label","backgroundColor","barThickness","options","maintainAspectRatio","responsive","scales","xAxes","type","time","unit","round","displayFormats","gridLines","color","yAxes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport moment from 'moment';\nimport { Container } from 'react-bootstrap'; \n\nconst GraphUI = ( { healthWard, dataType } ) => {\n\n    console.log(\"graphUI\")\n    console.log(dataType);\n\n    const toString = (date) => {\n        const year = date[0];\n        const month = date[1].par == 2 ? date[1] : \"0\" + date[1];\n        const day = date[2] == 2 ? date[2] : \"0\" + date[2];\n        \n        const dateString = year + \"-\" + month + \"-\" + day;\n        console.log(dateString);\n\n        return dateString;\n    };\n\n    var dailyRecords = healthWard.dailyRecords;\n    console.log(dailyRecords);\n\n    const labels = () => {\n            const dates = dailyRecords.map(dailyRecord => { \n                return moment(toString(dailyRecord.date));\n            });\n            console.log(dates);\n            return dates;\n    };\n\n    const figures = () => { \n        return dataType.value === \"twoWeekRate\" ? dailyRecords.map(dailyRecord => dailyRecord.twoWeekRate)\n                                                : dailyRecords.map(dailyRecord => dailyRecord.totalCases);\n    };\n\n\n    var data = {\n        labels: labels(),\n        datasets: [{\n            label: dataType.label,\n            backgroundColor: \"#444fe3\",\n            data: figures(),\n            barThickness: \"flex\",\n        }]\n    };\n\n    \n    \n    var options = {\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n            xAxes: [{\n                type: \"time\",\n                time: {\n                    unit: 'day',\n                    round: 'day',\n                    displayFormats: {\n                        day: 'MMM D'\n                    }\n                },\n            gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n                }\n            }],\n            yAxes: [{\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                }   \n            }]\n        }\n    };\n    \n\n\n\n    return (\n        <>\n            <Container>\n                <Bar\n                    width={400}\n                    height={400}\n                    data={data}\n                    options={options}\n                />\n            </Container>\n        </>\n    );\n    \n}\n\nexport default GraphUI"]},"metadata":{},"sourceType":"module"}